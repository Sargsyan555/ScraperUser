import { Injectable } from "@nestjs/common";
import { Context } from "src/types/context.interface";
import { UsersService } from "../authorization/users.service";
import { Markup } from "telegraf";
@Injectable()
export class StartHandler {
  private readonly templateLink = process.env.YANDEX_LINK || "";
  private readonly adminUsername = "torosyann1";

  constructor(private readonly userService: UsersService) {}
  async handle(ctx: Context) {
    const telegramUsername = ctx.from?.username;
    if (!telegramUsername) {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à Telegram username.");
      return;
    }
    const buttons: any[][] = [
      [
        Markup.button.callback(
          "üì• –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω Excel",
          "template_excel_download",
        ),
      ],
    ];
    const x = Markup.inlineKeyboard(buttons);

    await ctx.reply(
      "üëã *–î–æ–±—Ä–æ‚ÄØ–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –ø–æ–∏—Å–∫—É —Ü–µ–Ω –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏\\!*",
      {
        parse_mode: "MarkdownV2",
        ...x,
      },
    );

    await ctx.reply(
      "üìÑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ Excel-—Ñ–∞–π–ª, –∏ –º—ã –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–µ–º.\n\n" +
        "üìå –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é –≤ –æ–¥–Ω–æ–º –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤:\n\n" +
        "‚úÖ –ü–æ–ª–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: 12345, 1, CAT\n" +
        "‚úÖ –ë–µ–∑ –±—Ä–µ–Ω–¥–∞: 12345, 1\n" +
        "‚úÖ –ë–µ–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞: 12345, CAT\n" +
        "‚úÖ –¢–æ–ª—å–∫–æ –∞—Ä—Ç–∏–∫—É–ª: 12345\n\n" +
        "üîÅ –ü–æ—Ä—è–¥–æ–∫: –∞—Ä—Ç–∏–∫—É–ª, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –±—Ä–µ–Ω–¥\n" +
        "‚ùóÔ∏è –†–∞–∑–¥–µ–ª—è–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–ø—è—Ç–æ–π –∏ —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø–æ—Ä—è–¥–æ–∫.",
    );
  }
}
